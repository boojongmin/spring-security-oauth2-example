### Grant Type: password
POST http://client2:client2@localhost:8080/oauth/token
Content-Type: application/x-www-form-urlencoded

grant_type=password&username=user&password=password

### Grant Type: client_credentials
POST http://client1:client1@localhost:8080/oauth/token
Content-Type: application/x-www-form-urlencoded

grant_type=client_credentials&scope=read write
# grant_type=client_credentials&scope=read

### Grant Type: refresh_token
POST http://client1:client1@localhost:8080/oauth/token
Content-Type: application/x-www-form-urlencoded

grant_type=refresh_token&scope=read write&refresh_token=eb12b382-8ca6-411b-aefb-fcb7a7472f89



### authorization_code flow
### http://localhost:8080/oauth/authorize?client_id=client2&redirect_uri=http://localhost:8081/login&response_type=code&state=0vE3q9
GET http://localhost:8080/api/v1/userinfo
Content-Type: application/x-www-form-urlencoded
Authorization: Bearer 0d2cc9d0-6cde-4553-baa2-5e3a4db9bca4


#http://localhost:8081/login?code=HC5ZEM&state=0vE3q9

###
POST http://client2:client2@localhost:8080/oauth/token
Content-Type: application/x-www-form-urlencoded

grant_type=authorization_code&code=h5mPlh&state=0vE3q9&redirect_uri=http://localhost:8081/login


### 1번째 필터 oauth server : /oauth/** [/oauth/authorize, /oauth/token, /oauth/check_token, /oauth/confirm_access, /oauth/token_key, /oauth/error]
POST http://client2:client2@localhost:8080/oauth/check_token
Content-Type: application/x-www-form-urlencoded

token=0d2cc9d0-6cde-4553-baa2-5e3a4db9bca4

### 2번째 필터 resource server test : /api/**
GET http://localhost:8080/api/v1/userinfo
Authorization: Bearer 0d2cc9d0-6cde-4553-baa2-5e3a4db9bca4

### 3번째 필터 web security : /**
GET http://localhost:8080/test


